import { convertToLowG, convertToHighG } from "../src/converter.js";

describe("converters tests", () => {
  test("low G convert without transpose an octave", () => {
    // Arrange
    const tabToConvert = [
      "e|-12-12-12-12-12-11--12-12-12-12-12-11--9-9-9-9-11-9-------------|",
      "B|-----------------------------------------------------14-12-11---|",
      "G|----------------------------------------------------------------|",
      "D|----------------------------------------------------------------|",
      "A|----------------------------------------------------------------|",
      "E|----------------------------------------------------------------|",
    ];
    const expectedResult = [
      [
        "A",
        "|",
        "—",
        7,
        "—",
        7,
        "—",
        7,
        "—",
        7,
        "—",
        7,
        "—",
        6,
        "—",
        "—",
        7,
        "—",
        7,
        "—",
        7,
        "—",
        7,
        "—",
        7,
        "—",
        6,
        "—",
        "—",
        4,
        "—",
        4,
        "—",
        4,
        "—",
        4,
        "—",
        6,
        "—",
        4,
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "|",
      ],
      [
        "E",
        "|",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        9,
        "—",
        7,
        "—",
        6,
        "—",
        "—",
        "—",
        "|",
      ],
      [
        "C",
        "|",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "|",
      ],
      [
        "G",
        "|",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "|",
      ],
      [
        "A",
        "|",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "|",
      ],
      [
        "E",
        "|",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "|",
      ],
    ];
    // Act
    const result = convertToLowG(tabToConvert);
    // Assert
    expect(result.result).toStrictEqual(expectedResult);
    expect(result.transposed).toStrictEqual(false);
  });
  test("low G convert with transpose by an octave", () => {
    const tabToConvert = [
      "E|--2-3-2--3-5-3--5-7------------7-7----------------3-2-0----------------------|",
      "B|--------------------8-5-5----------8--5-5--3-1-0-----------------------------|",
      "G|---------------------------4-------------------------------------------------|",
      "D|-----------------------------------------------------------------------------|",
      "A|-----------------------------------------------------------------------------|",
      "E|-----------------------------------------------------------------------------|",
    ];
    const expectedResult = [
      [
        "A",
        "|",
        "—",
        9,
        "—",
        10,
        "—",
        9,
        "—",
        "—",
        10,
        "—",
        12,
        "—",
        10,
        "—",
        "—",
        12,
        "—",
        14,
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        14,
        "—",
        14,
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        10,
        "—",
        9,
        "—",
        7,
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "|",
      ],
      [
        "E",
        "|",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        15,
        "—",
        12,
        "—",
        12,
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        15,
        "—",
        "—",
        12,
        "—",
        12,
        "—",
        "—",
        10,
        "—",
        8,
        "—",
        7,
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "|",
      ],
      [
        "C",
        "|",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        11,
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "|",
      ],
      [
        "G",
        "|",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "|",
      ],
      [
        "A",
        "|",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "|",
      ],
      [
        "E",
        "|",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "|",
      ],
    ];
    // Act
    const result = convertToLowG(tabToConvert);
    // Assert
    expect(result.result).toStrictEqual(expectedResult);
    expect(result.transposed).toStrictEqual(true);
  });
  test("convert to high G with octave transpose", () => {
    // Arrange
    const tabToConvert = [
      "e|---------------|",
      "B|---------------|",
      "G|---------------|",
      "D|-3-5-5-3-5-----|",
      "A|-3-5-5-3-5-----|",
      "E|---------------|",
    ];
    const expectedResult = [
      [
        "A",
        "|",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "|",
      ],
      [
        "E",
        "|",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "|",
      ],
      [
        "C",
        "|",
        "—",
        12,
        "—",
        14,
        "—",
        14,
        "—",
        12,
        "—",
        14,
        "—",
        "—",
        "—",
        "—",
        "—",
        "|",
      ],
      [
        "G",
        "|",
        "—",
        10,
        "—",
        12,
        "—",
        12,
        "—",
        10,
        "—",
        12,
        "—",
        "—",
        "—",
        "—",
        "—",
        "|",
      ],
      [
        "A",
        "|",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "|",
      ],
      [
        "E",
        "|",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "|",
      ],
    ];
    // Act
    const result = convertToHighG(tabToConvert, 18);
    // Assert
    expect(result.result).toStrictEqual(expectedResult);
    expect(result.transposed).toStrictEqual(true);
  });
  test("convert to high G without octave transpose", () => {
    // Arrange
    const tabToConvert = [
      "e|-12-12-12-12-12-11--12-12-12-12-12-11--9-9-9-9-11-9-------------|",
      "B|-----------------------------------------------------14-12-11---|",
      "G|----------------------------------------------------------------|",
      "D|----------------------------------------------------------------|",
      "A|----------------------------------------------------------------|",
      "E|----------------------------------------------------------------|",
    ];
    const expectedResult = [
      [
        "A",
        "|",
        "—",
        7,
        "—",
        7,
        "—",
        7,
        "—",
        7,
        "—",
        7,
        "—",
        6,
        "—",
        "—",
        7,
        "—",
        7,
        "—",
        7,
        "—",
        7,
        "—",
        7,
        "—",
        6,
        "—",
        "—",
        4,
        "—",
        4,
        "—",
        4,
        "—",
        4,
        "—",
        6,
        "—",
        4,
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "|",
      ],
      [
        "E",
        "|",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        9,
        "—",
        7,
        "—",
        6,
        "—",
        "—",
        "—",
        "|",
      ],
      [
        "C",
        "|",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "|",
      ],
      [
        "G",
        "|",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "|",
      ],
      [
        "A",
        "|",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "|",
      ],
      [
        "E",
        "|",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "—",
        "|",
      ],
    ];
    const fretLength = 18;
    // Act
    const result = convertToHighG(tabToConvert, fretLength);
    // Assert
    expect(result.result).toStrictEqual(expectedResult);
    expect(result.transposed).toStrictEqual(false);
  });
  test("Fails high G when fretlength too short", () => {
    // Arrange
    const alejandroTab = [
      "e|---------------------------------------------------------------------|",
      "B|--------------5/7--3--3--5--3--2--8-------------2--5--5--3-----1/2---|",
      "G|---------------------------------------------3--------------3--------|",
      "D|--4--5/7/5--4-----------------------5--5--4--------------------------|",
      "A|---------------------------------------------------------------------|",
      "E|---------------------------------------------------------------------|",
    ];
    const fretLength = 18;
    // Act
    const convert = function () {
      convertToHighG(alejandroTab, 18);
    };
    // Assert
    expect(convert).toThrow();
  });
  test(`convert to low G fails`, () => {
    // Arrange
    const tab = [
      "e|---------------|",
      "B|---------------|",
      "G|---------------|",
      "D|-23-25-25-23-25-----|",
      "A|-3-5-5-3-5-----|",
      "E|---------------|",
    ];
    // Act
    const convert = function () {
      convertToLowG(tab, 18);
    };
    // Assert
    expect(convert).toThrow("convert to Low G failed");
  });

  test("convert barre chords to low G", () => {
    // Arrange
    const tabWithBarres = [
      ["A", "|", "—", 10, "—", "|"],
      ["E", "|", "—", 10, "—", "|"],
      ["C", "|", "—", 10, "—", "|"],
      ["G", "|", "—", 10, "—", "|"],
      ["A", "|", "—", 10, "—", "|"],
      ["E", "|", "—", 10, "—", "|"],
    ];
    const expectedResult = [
      ["A", "|", "—", 5, "—", "|"],
      ["E", "|", "—", 5, "—", "|"],
      ["C", "|", "—", 5, "—", "|"],
      ["G", "|", "—", 5, "—", "|"],
      ["A", "|", "—", "—", "—", "|"],
      ["E", "|", "—", "—", "—", "|"],
    ];
    // Act
    const converted = convertToLowG(tabWithBarres);
    // Assert
    expect(converted.result).toStrictEqual(expectedResult);
  });

  test("convert barre chords to high G", () => {
    // Arrange
    const tabWithBarres = [
      ["A", "|", "—", 10, "—", "|"],
      ["E", "|", "—", 10, "—", "|"],
      ["C", "|", "—", 10, "—", "|"],
      ["G", "|", "—", 10, "—", "|"],
      ["A", "|", "—", 10, "—", "|"],
      ["E", "|", "—", 10, "—", "|"],
    ];
    const expectedResult = [
      ["A", "|", "—", 17, "—", "|"],
      ["E", "|", "—", 17, "—", "|"],
      ["C", "|", "—", 17, "—", "|"],
      ["G", "|", "—", 5, "—", "|"],
      ["A", "|", "—", "—", "—", "|"],
      ["E", "|", "—", "—", "—", "|"],
    ];
    // Act
    const converted = convertToHighG(tabWithBarres);
    // Assert
    expect(converted.result).toStrictEqual(expectedResult);
  });
});
