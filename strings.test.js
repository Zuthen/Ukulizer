"use strict";
import {
  mergeNumbers,
  convertToNumber,
  removeRedunantDashes,
} from "./strings.js";
//node --experimental-vm-modules node_modules/jest/bin/jest.js

describe("strings operations tests", () => {
  const stringWithMergedNumbers = [
    "e",
    "|",
    "-",
    "12",
    "*",
    "-",
    "12",
    "*",
    "-",
    "12",
    "*",
    "-",
    "12",
    "*",
    "-",
    "12",
    "*",
    "-",
    "11",
    "*",
    "-",
    "-",
    "12",
    "*",
    "-",
    "12",
    "*",
    "-",
    "12",
    "*",
    "-",
    "12",
    "*",
    "-",
    "12",
    "*",
    "-",
    "11",
    "*",
    "-",
    "-",
    "9",
    "-",
    "9",
  ];
  test("merge numbers", () => {
    const input = [
      "e",
      "|",
      "-",
      "1",
      "2",
      "-",
      "1",
      "2",
      "-",
      "1",
      "2",
      "-",
      "1",
      "2",
      "-",
      "1",
      "2",
      "-",
      "1",
      "1",
      "-",
      "-",
      "1",
      "2",
      "-",
      "1",
      "2",
      "-",
      "1",
      "2",
      "-",
      "1",
      "2",
      "-",
      "1",
      "2",
      "-",
      "1",
      "1",
      "-",
      "-",
      "9",
      "-",
      "9",
    ];
    const removedIndexes = [4, 7, 10, 13, 16, 19, 23, 26, 29, 32, 35, 38];
    mergeNumbers(input);
    expect(input).toStrictEqual(stringWithMergedNumbers);
    removedIndexes.forEach((element) => {
      expect(input[element]).toBe("*");
    });
  });
  test("convert to number", () => {
    const expectedOutput = [
      "e",
      "|",
      "-",
      12,
      "*",
      "-",
      12,
      "*",
      "-",
      12,
      "*",
      "-",
      12,
      "*",
      "-",
      12,
      "*",
      "-",
      11,
      "*",
      "-",
      "-",
      12,
      "*",
      "-",
      12,
      "*",
      "-",
      12,
      "*",
      "-",
      12,
      "*",
      "-",
      12,
      "*",
      "-",
      11,
      "*",
      "-",
      "-",
      9,
      "-",
      9,
    ];
    convertToNumber(stringWithMergedNumbers);
    expect(stringWithMergedNumbers).toStrictEqual(expectedOutput);
  });
  test("remove redundant dashes", () => {
    const aString = [
      [
        "A",
        "|",
        "-",
        7,
        "*",
        "-",
        6,
        "*",
        "-",
        "-",
        4,
        "-",
        4,
        "-",
        4,
        "-",
        4,
        "-",
        6,
        "*",
        "-",
        4,
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
      ],
    ];
    const eString = [
      [
        "E",
        "|",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        9,
        "*",
        "-",
        7,
        "*",
        "-",
        6,
        "*",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
      ],
    ];
    const cString = [
      [
        "C",
        "|",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
      ],
    ];
    const gString = [
      [
        "G",
        "|",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        2,
        "-",
        "-",
        "-",
        "-",
        "-",
        "-",
        7,
        "*",
        "-",
        5,
        "*",
        "-",
        "-",
        "-",
        "-",
        5,
        "*",
        "-",
        7,
        "*",
        "-",
        7,
        "*",
        "-",
        5,
        "*",
        "-",
        "-",
        "-",
        "-",
        "-",
      ],
    ];
    const fixedAstring = [
      "A",
      "|",
      "-",
      7,
      "-",
      6,
      "-",
      "-",
      4,
      "-",
      4,
      "-",
      4,
      "-",
      4,
      "-",
      6,
      "-",
      4,
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
    ];
    const fixedEString = [
      "E",
      "|",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      9,
      "-",
      7,
      "-",
      6,
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
    ];
    const fixedCstring = [
      "C",
      "|",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
    ];
    const fixedGstring = [
      "G",
      "|",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      "-",
      2,
      "-",
      "-",
      "-",
      "-",
      7,
      "-",
      5,
      "-",
      "-",
      "-",
      "-",
      5,
      "-",
      7,
      "-",
      7,
      "-",
      5,
      "-",
      "-",
      "-",
      "-",
      "-",
    ];
    const input = [aString, eString, cString, gString];
    const expectedResult = [
      fixedAstring,
      fixedEString,
      fixedCstring,
      fixedGstring,
    ];
    const result = removeRedunantDashes(input);
    expect(result).toStrictEqual(expectedResult);
  });
});
